SAMPLES = {
    "triangle": ["dist(X,Y)=136",
                "X!=Y",
                "X=Point(0,0)",
                "dist(Z,Y)=136",
                "X!=Z",
                "Z=Point(136,0)",
                "drawSegment(X, Y)",
                "drawSegment(Y, Z)",
                "drawSegment(Z, X)",
                        "?(Y)"],
    "diamond":
           # Another example to the way we can write the input: can also write multiple predicates in the same string, can write several vars in same output statement
            ["?(W, Y)",
            "X=Point(0, 0)",
            "Z=Point(200, 0)",
            "W!=X",
            "dist(X,Y)=200",
            "dist(Z,Y)=200",
            "dist(W,Y)=200",
            "dist(Z,W)=200",
            "drawSegment(X, Y)",
            "drawSegment(Y, W)",
            "drawSegment(Z, X)",
            "drawSegment(Z, W)"
            ],
    "square": ["dist(A,B)=d",
               "dist(B,C)=d",
               "dist(C,D)=d",
               "dist(D,A)=d",
               "A!=B",
               "A!=C",
               "B!=D",
               "angle(A,D,C)=90",
               "A=Point(0,0)",
               "B=Point(100,0)",
               "drawSegment(A, B)",
               "drawSegment(B, C)",
               "drawSegment(C, D)",
               "drawSegment(A, D)",
               "?(C)",
               "?(D)"
    ],
    "square2": [
                "dist(A,B)=100",
                "dist(B,C)=100",
                "dist(C,D)=100",
                "angle(A,B,C)=90",
                "A=Point(0,0)",
                "B=Point(100,0)",
               "drawSegment(A, B)",
               "drawSegment(B, C)",
               "drawSegment(C, D)",
               "drawSegment(A, D)",
                "?(C)", "?(D)"
    ],
    "pentagon": ["dist(A,B)=d", "dist(B,C)=d", "dist(C,D)=d",
                "dist(D,E)=d", "dist(E,A)=d",
                "angleCcw(A,B,C)=a", "angleCcw(B,C,D)=a",
                "angleCcw(C,D,E)=a", "angleCcw(D,E,A)=a",
                "angleCcw(E,A,B)=a",
                "intersect2segmentsQ(A,B,C,D,q)",
                "realnot(q)",
                "D!=A", "A!=C",
                "A=Point(0, 0)", "C=Point(200,0)",
                "drawSegment(A,B)",
                "drawSegment(B,C)",
                "drawSegment(C,D)",
                "drawSegment(D,E)",
                "drawSegment(E,A)",
                "?(B)", "?(D)", "?(E)"],
    "9gon": ["dist(A,B)=d", "dist(B,C)=d", "dist(C,D)=d",
            "dist(D,E)=d", "dist(E,F)=d", "dist(F,G)=d",
            "dist(G,H)=d", "dist(H,I)=d", "dist(I,A)=d", "angleCcw(A,B,C)=a",
            "angleCcw(B,C,D)=a", "angleCcw(C,D,E)=a",
            "angleCcw(D,E,F)=a", "angleCcw(E,F,G)=a",
            "angleCcw(F,G,H)=a", "angleCcw(G,H,I)=a",
            "angleCcw(H,I,A)=a", "angleCcw(I,A,B)=a",
            "A=Point(0,0)", "B=Point(100,100)", "D!=A",
            "?(C)", "?(D)", "?(E)", "?(F)", "?(G)", "?(H)", "?(I)",
             "intersect2segmentsQ(A,B,C,D,q1)", "realnot(q1)",
             "intersect2segmentsQ(A,B,G,F,q2)", "realnot(q2)",
            "drawSegment(A,B)",
             "drawSegment(B,C)",
             "drawSegment(C,D)",
             "drawSegment(D,E)",
             "drawSegment(E,F)",
             "drawSegment(F,G)",
             "drawSegment(G,H)",
             "drawSegment(H,I)",
             "drawSegment(I,A)",
            ],
    "square-in-square":
          ["dist(A, B)=d & dist(B, C) = d & dist(C,D)=d", "dist(D,A)=d", "A!=B", "A != C", "B!=D",
          #"angleCw(A,D,C)=90",
           "angleCcw(A,D,C)=90",
           "segment(A,B,AB)","in(E,AB)", "dist(A,E)=15",
           "segment(B,C,BC)","in(F,BC)","!in(F,CD)",
           "segment(C,D,CD)", "in(G,CD)", "!in(G,DA)",
           "segment(D,A,DA)", "in(H,DA)",
           "angle(E,F,G)=90",
           "angle(F,G,H)=90",
           "angle(G,H,E)=90",
           "A=Point(-60,5)", "B=Point(60,-4)","?(C)", "?(D)"
            "drawSegment(A,B)",
           "drawSegment(B,C)",
           "drawSegment(C,D)",
           "drawSegment(D,A)",
           "drawSegment(E,F)",
           "drawSegment(F,G)",
           "drawSegment(G,H)",
           "drawSegment(H,E)",
           "?(E, F, G, H)"
           ],
   "square-in-triangle":
            ["A=Point(0,0)", "B=Point(200,0)",
            "C=Point(100,100)",
             "segment(A,B,AB)", "in(D,AB)",
             "in(E,AB)",
             "segment(A,C,AC)", "in(F,AC)",
             "segment(B,C,BC)", "in(G,BC)",
             "angle(D,E,F,90)",
             "angle(E,D,G,90)",
             "angle(D,G,F,90)",
             "dist(D,E,d)", "dist(E,F,d)",
             "D!=E", "D!=A", "D!=B", "E!=B", "E!=A",
             "!colinear(A,C,D)",
             "!colinear(A,B,C)",
             "!colinear(D,E,F)", "!colinear(D,E,C)","!colinear(E,F,C)",
             "!colinear(D,G,B)",
             "drawSegment(A,B)",
             "drawSegment(B,C)",
             "drawSegment(C,A)",
             "drawSegment(D,E)",
             "drawSegment(E,F)",
             "drawSegment(F,G)",
             "drawSegment(G,D)",
#                 "[!colinear](G,A,C)",
             #"dist(E,D,x) & dist(E,F,x)",
             "?(D)", "?(E)", "?(F)","?(G)"
             ],
    'tut:middle-1':
            ["segment(A,B,AB)", "in(E,AB)", "dist(A,E,a)",
            "dist(E,B,a)", "segment(B,C,BC)", "in(D,BC)",
            "dist(B,D,b)", "dist(D,C,b)",
             "segment(C,A,CA)", "in(F,CA)", "dist(C,F,c)",
             "dist(F,A,c)", "dist(A,B,d)", "dist(A,C,d)",
            "A!=D",
            "A=Point(2,2)","B=Point(0,0)",
            "?(C)", "?(D)", "?(E)", "?(F)"],
     'SAT:angles-1': [
            "dist(O,A,100)", "dist(O,R,100)",
            "O!=B", "O!=L",
            "angleCcw(B,O,A,40)", "angleCcw(R,O,L,25)",
             "middle(L,A,O)", "middle(K,B,O)",
             "O=Point(0,0)", "B=Point(10, 0)",
             #TODO: Make known an option"known(O)", "known(B)", 
             "?(A)", "?(R)", "?(L)", "?(K)"],
     'SAT:clover': [
            "angleCcw(D,A,B,50)", "angleCcw(C,D,A,45)",
            "angleCcw(A,B,F,50)", "angleCcw(B,F,E,60)",
           "angleCcw(F,E,C,90)", "segment(A,B,AB)",
            "segment(C,D,CD)", "in(P,AB)", "in(P,CD)",
            "C!=D",
            # & [!=](AB,CD)",
           "segment(E,F,EF)", "in(P,EF)", # & [!=](AB,EF) & [!=](CD,EF)",
           "A=Point(0,0)", "B=Point(5, 0)",
           "?(C)", "?(D)", "?(E)", "?(F)", "?(P)"],
           
     'SAT:right-tri-circd': [
        "circle(O,75,R) & in(A,R) & in(B,R) & in(C,R)",
        "A!=B & A!=C & B!=C",
       "segment(A,C,AC) & in(O,AC)",
       "dist(B,O,75) & dist(A,B,75)",
       "O=Point(0,0) & ?(A,B,C,R)"],
       
     'SAT:tri2/5': [
        "angle(P,S,R)=90", "angle(S,R,Q)=90",
       "angle(R,Q,P)=90",
       "angle(Q,P,S)=90",
       "segment(P,S,PS) & in(T,PS)",
       "dist(P,S,d) & dist(P,T,k) & prod(5,r,2) & prod(r,d,k)",
       "P=Point(0,0) & known(S) & (?)(R,Q,T)"], #TODO: What is S?????
}