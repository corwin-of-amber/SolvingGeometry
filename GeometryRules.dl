// Declarations
.decl MakeCircle(center: symbol, radius: symbol)
.output MakeCircle
.decl Circle(center: symbol, radius: symbol, id:symbol)
.input Circle
  
  
.decl Angle(a:symbol, b:symbol, c:symbol, angle:symbol)

.decl Perp(l1:symbol, l2:symbol)

.decl MakeLine(a:symbol, b:symbol)
.input MakeLine

.decl Dist(a: symbol, b: symbol, d:symbol)

.decl MakeIntersection(locus1: symbol, locus2: symbol)
.output MakeIntersection
.decl Intersection(locus1: symbol, locus2: symbol, id: symbol)
.input Intersection

.decl SubsetOf(subset:symbol, superset:symbol)

.decl In(point: symbol, locus: symbol)
.output In

.decl Known(a: symbol)
.input Known
.output Known

.decl Dimension(id: symbol, dim: number)
.output Dimension

.decl KnownDimension(id: symbol, dim: number)
.output KnownDimension

.decl TypeOf(type:symbol, id:symbol)


// -- Circle --
MakeCircle(a, d):- Dist(a, _, d).


// Angle
//R("angle(A,B,C,[:90:]) & in(A,l1) & in(B,l1) & in(B,l2) & //in(C,l2)"
//         " & typeof(l1,[:line:]) & typeof(l2,[:line:])", 
//          "perp(l1, l2)", title="angle90-lines"),

Perp(l1, l2):-Angle(a,b,c,"90"), TypeOf("line", l1), TypeOf("line", l2), In(a, l1), In(c, l2), In(b, l1), In(b, l2).


// -- Arithmetics rules --
Dist(a, b, d):- Dist(b, a, d).

// Create intersections only between objects that aren't both from dimension 0
MakeIntersection(c1, c2):-In(b, c1), In(b, c2), c1!=c2, !(Dimension(c1, 0); Dimension(c2, 0)).
//TODO: Delete SubsetOf relation  or use it
//MakeIntersection(c1, c2):-In(b, c1), In(b, c2), c1!=c2,!SubsetOf(c1,c2), !SubsetOf(c2, c1).
//!(SubsetOf(l, c1); SubsetOf(l , c2)).
  
SubsetOf(subset, superset):-Intersection(_, superset, subset).
SubsetOf(subset, superset):-Intersection(superset, _, subset).
SubsetOf(subset, superset):-SubsetOf(subset, l), SubsetOf(l, superset).

In(b, c):- Dist(b, a, d), Circle(a, d, c).
In(b, i):-In(b, c1), In(b, c2), Intersection(c1, c2, i).
  

Known(c):- Circle(a, d, c), Known(a), Known(d).
Known(i):- Known(c1), Known(c2), Intersection(c1, c2, i).
Known(dist):-Known(a), Known(b), Dist(a, b, dist).
Known(l):-Known(l2),(Perp(l, l2);Perp(l2, l)).


Dimension(i, 1):-TypeOf("line", i).
Dimension(i, 1):-Circle(_, __, i).
Dimension(i, 0):-Intersection(a, b, i), Dimension(a, 1), Dimension(b, 1), a!= b.

KnownDimension(id, dim):-Dimension(id, dim), Known(id).
